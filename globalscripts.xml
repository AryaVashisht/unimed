<map>
  <entry>
    <string>Undeploy</string>
    <string>// This script executes once for each deploy, undeploy, or redeploy task
// if at least one channel was undeployed
// You only have access to the globalMap here to persist data
return;</string>
  </entry>
  <entry>
    <string>Postprocessor</string>
    <string>// This script executes once after a message has been processed
// This script applies across all channels
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
// You have access to &quot;response&quot;, if returned from the channel postprocessor
return;</string>
  </entry>
  <entry>
    <string>Deploy</string>
    <string>// This script executes once for each deploy or redeploy task
// You only have access to the globalMap here to persist data
      try{

        logger.info(&quot;globalMap :  &quot;+globalMap)
        var systemVariables = java.lang.System.getenv();
        var custId = systemVariables.get(&apos;CUSTID&apos;)
        globalMap.put(&quot;customerId&quot;,custId )
        globalMap.put(&quot;baseDirectoryPath&quot;, (custId &amp;&amp; custId != &quot;&quot;) ? &apos;/opt/mphrx/&apos;+custId+&apos;/data/CsvForMirth&apos; : configurationMap.get(&apos;baseDirectoryPath&apos;) )
        globalMap.put(&quot;custName&quot;, (systemVariables.get(&apos;CUSTNAME&apos;) &amp;&amp; systemVariables.get(&apos;CUSTNAME&apos;) != &quot;&quot;) ?  systemVariables.get(&apos;CUSTNAME&apos;)  : configurationMap.get(&apos;assigningAuthority&apos;) )
        globalMap.put(&quot;publicUrl&quot;, (systemVariables.get(&apos;PUBLIC_URL&apos;) &amp;&amp; systemVariables.get(&apos;PUBLIC_URL&apos;) != &quot;&quot;) ? &apos;https://&apos;+systemVariables.get(&apos;PUBLIC_URL&apos;) : JSON.parse(configurationMap.get(&apos;apiInformation&apos;)).minervaUrl)
        
        logger.info(&quot;globalMap :  &quot;+globalMap)

      }catch(e){
        logger.error(&quot;Exception in Global Script : &quot;+e)

      }

      return;</string>
  </entry>
  <entry>
    <string>Preprocessor</string>
    <string>// Modify the message variable below to pre process data
// This script applies across all channels
return message;</string>
  </entry>
</map>